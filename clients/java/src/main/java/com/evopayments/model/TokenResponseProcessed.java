/*
 * EVO Payments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.evopayments.model;

import java.util.Objects;
import java.util.Arrays;
import com.evopayments.model.BaseResponse;
import com.evopayments.model.ResponseNotProcessed;
import com.evopayments.model.TokenResponseProcessed;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TokenResponseProcessed
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-14T16:20:51.784655Z[Etc/UTC]")
public class TokenResponseProcessed extends BaseResponse {
  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchantId";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_RESULT_ID = "resultId";
  @SerializedName(SERIALIZED_NAME_RESULT_ID)
  private String resultId;

  public static final String SERIALIZED_NAME_PROCESSING_TIME = "processingTime";
  @SerializedName(SERIALIZED_NAME_PROCESSING_TIME)
  private Integer processingTime;

  public TokenResponseProcessed() { 
    this.result = this.getClass().getSimpleName();
  }

  public TokenResponseProcessed merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Get merchantId
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMerchantId() {
    return merchantId;
  }


  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public TokenResponseProcessed token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public TokenResponseProcessed resultId(String resultId) {
    
    this.resultId = resultId;
    return this;
  }

   /**
   * Get resultId
   * @return resultId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getResultId() {
    return resultId;
  }


  public void setResultId(String resultId) {
    this.resultId = resultId;
  }


  public TokenResponseProcessed processingTime(Integer processingTime) {
    
    this.processingTime = processingTime;
    return this;
  }

   /**
   * Get processingTime
   * @return processingTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProcessingTime() {
    return processingTime;
  }


  public void setProcessingTime(Integer processingTime) {
    this.processingTime = processingTime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TokenResponseProcessed tokenResponseProcessed = (TokenResponseProcessed) o;
    return Objects.equals(this.merchantId, tokenResponseProcessed.merchantId) &&
        Objects.equals(this.token, tokenResponseProcessed.token) &&
        Objects.equals(this.resultId, tokenResponseProcessed.resultId) &&
        Objects.equals(this.processingTime, tokenResponseProcessed.processingTime) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantId, token, resultId, processingTime, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TokenResponseProcessed {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    resultId: ").append(toIndentedString(resultId)).append("\n");
    sb.append("    processingTime: ").append(toIndentedString(processingTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

